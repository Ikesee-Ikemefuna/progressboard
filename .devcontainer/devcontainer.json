// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
  "name": "nix-devcontainer-flask",
   "hostRequirements": {
    "cpus": 4
  },
  "dockerFile": "Dockerfile",
  "context": "${localWorkspaceFolder}",
  "build": {
    "args": {
      "USER_UID": "${localEnv:USER_UID}",
      "USER_GID": "${localEnv:USER_GID}"
    },
  },

  "runArgs": [
    "--security-opt", "label=disable"
  ],

  "mounts": [
    "source=nix-devcontainer-python-jupyter_nix,target=/nix,type=volume"
  ],

  "userEnvProbe": "loginShell",
  "overrideCommand": false,
  "updateRemoteUserUID": false,

  // build development environment on creation
  "onCreateCommand": "nix-shell --command 'echo done building nix dev environment'",
  "postAttachCommand": {
    "server": "redis-server --daemonize yes && flask run"
  },
  
  "portsAttributes": {
    "5000": {
      "label": "Application",
      "onAutoForward": "openPreview"
    }
  },
    
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    // select nix environment
    "arrterian.nix-env-selector",

    // nix formatting and dev support
    "jnoortheen.nix-ide",

    // run command on save (needed to reload nix environment)
    "fsevenm.run-it-on",

    // python support
    "ms-python.python"
  ],
    
  "features": {
    "git-lfs": "latest",
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [5000, 6379],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "go version",
}
